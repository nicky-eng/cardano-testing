{"version":3,"sources":["webpack:///src/app/stores.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/http-request-interceptor.ts","webpack:///src/app/loading.service.ts","webpack:///src/app/store-box/store-box.component.ts","webpack:///src/app/store-box/store-box.component.html","webpack:///src/app/store-list/store-list.component.ts","webpack:///src/app/store-list/store-list.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["StoresService","http","storesUrl","url","currentUrl","get","environment","production","AppComponent","storesService","title","AppModule","provide","useClass","multi","HttpRequestInterceptor","_loading","request","next","setLoading","handle","pipe","err","evt","LoadingService","loadingSub","loadingMap","Map","loading","Error","set","has","size","StoreBoxComponent","faMapMarkerAlt","StoreListComponent","storeList","paginationNext","paginationPrevious","pagesShown","getStores","subscribe","data","numberOfPages","Math","ceil","console","log","currentPage","Number","split","paginationAddress","includes","initializer","endCondition","min","i","push","listenToLoading","bootstrapModule","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoresService {\n\n  constructor(private http: HttpClient) { }\n\n  //private storesUrl = 'http://localhost:8000/stores/?format=json';\n  private storesUrl = 'https://testing-cardano-back.herokuapp.com/stores/?format=json';\n  // private storesUrl = 'https://cardano-directory-back.herokuapp.com/stores/?format=json';\n\n  getStores(url: string): Observable<any> {\n    const currentUrl = url ?? this.storesUrl\n\n    return this.http.get(currentUrl)\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\nimport { StoresService } from './stores.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Ada and Friends - Business Directory';\n\n  constructor(private storesService: StoresService) { }\n\n}\n\n","<app-store-list></app-store-list>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { StoreBoxComponent } from './store-box/store-box.component';\nimport { StoreListComponent } from './store-list/store-list.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { HttpRequestInterceptor } from './http-request-interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StoreBoxComponent,\n    StoreListComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FontAwesomeModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators'\nimport { LoadingService } from './loading.service';\n\n/**\n * This class is for intercepting http requests. When a request starts, we set the loadingSub property\n * in the LoadingService to true. Once the request completes and we have a response, set the loadingSub\n * property to false. If an error occurs while servicing the request, set the loadingSub property to false.\n * @class {HttpRequestInterceptor}\n */\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private _loading: LoadingService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        this._loading.setLoading(true, request.url);\n        return next.handle(request)\n            .pipe(catchError((err) => {\n                this._loading.setLoading(false, request.url);\n                return err;\n            }))\n            .pipe(map<HttpEvent<any>, any>((evt: HttpEvent<any>) => {\n                if (evt instanceof HttpResponse) {\n                    this._loading.setLoading(false, request.url);\n                }\n                return evt;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  loadingSub: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  /**\n   * Contains in-progress loading requests\n   */\n  loadingMap: Map<string, boolean> = new Map<string, boolean>();\n\n  constructor() { }\n\n  /**\n   * Sets the loadingSub property value based on the following:\n   * - If loading is true, add the provided url to the loadingMap with a true value, set loadingSub value to true\n   * - If loading is false, remove the loadingMap entry and only when the map is empty will we set loadingSub to false\n   * This pattern ensures if there are multiple requests awaiting completion, we don't set loading to false before\n   * other requests have completed. At the moment, this function is only called from the @link{HttpRequestInterceptor}\n   * @param loading {boolean}\n   * @param url {string}\n   */\n  setLoading(loading: boolean, url: string): void {\n    if (!url) {\n      throw new Error('The request URL must be provided to the LoadingService.setLoading function');\n    }\n    if (loading === true) {\n      this.loadingMap.set(url, loading);\n      this.loadingSub.next(true);\n    } else if (loading === false && this.loadingMap.has(url)) {\n      this.loadingMap.delete(url);\n    }\n    if (this.loadingMap.size === 0) {\n      this.loadingSub.next(false);\n    }\n  }\n}","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { Store } from '../store';\n\n@Component({\n  selector: 'app-store-box',\n  templateUrl: './store-box.component.html',\n  styleUrls: ['./store-box.component.css']\n})\nexport class StoreBoxComponent implements OnChanges {\n  faMapMarkerAlt = faMapMarkerAlt;\n  @Input() store!: Store;\n\n  @Input() index!: number;\n\n  constructor() { }\n\n  ngOnChanges() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"index%3 === 0\" class=\"clearfix visible-md-block visible-lg-block\"></div>\n<div *ngIf=\"index%2 === 0\" class=\"clearfix visible-sm-block\"></div>\n<div class=\" col-md-4 col-sm-6\">\n    <div class=\"single-explore-item\">\n        <div class=\"single-explore-img\">\n            <img src=\"{{ store.picture }}\" alt=\"shop image\">            \n        </div>\n        <div class=\"single-explore-txt bg-theme-1\">\n            <div class=\"explore-person\"> <!--Gray division line -->\n            <h2><a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noopener noreferrer\"> {{ store.name }} </a></h2>\n                 <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"explore-rating-price\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <p *ngIf=\"store.state; else elseBlock\">{{ store.address }}, {{ store.state}}</p>\n                                <ng-template #elseBlock>{{ store.address }}</ng-template></a>\n                            <br>\n                            <div *ngIf=\"store.country\">\n                                <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{ store.country['name'] }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"explore-open-close-part\">\n                <div class=\"row\">\n                    <div class=\"col-xs-5\">\n                        <a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noreferrer noopener\">\n                        <button class=\"close-btn open-btn\">open website</button>\n                        </a>\n                    </div>                  \n                    <div class=\"col-xs-7\">\n                        <div class=\"explore-map-icon\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\"><fa-icon [icon]=\"faMapMarkerAlt\"></fa-icon></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { delay } from 'rxjs/operators';\n\nimport { Store, Pagination } from '../store';\nimport { StoresService } from '../stores.service';\nimport { LoadingService } from '../loading.service';\n\n@Component({\n  selector: 'app-store-list',\n  templateUrl: './store-list.component.html',\n  styleUrls: ['./store-list.component.css']\n})\nexport class StoreListComponent implements OnInit {\n\n  loading: boolean = false;\n\n  storeList: Store[] = [];\n  paginationNext: string = '';\n  paginationPrevious: string = '';\n  numberOfPages: number;\n  currentPage: number;\n  pagesShown: Pagination[] = [];\n  initializer: number;\n  endCondition: number; // Sets the final number of pages to paginate.\n  paginationAddress: string;\n\n\n  getStores(url?: string) {\n    this.storesService.getStores(url).subscribe((data: JSON) => {\n      this.storeList = data['results'];\n      this.paginationNext = data['next'];\n      this.paginationPrevious = data['previous'];\n      this.numberOfPages = Math.ceil(data['count'] / 5);\n\n      console.log(this.paginationNext)\n\n      // Extraction ofthe current page number from \"next page\" link\n      if (this.paginationNext !== null) {\n        this.currentPage = Number(this.paginationNext.split('page=')[1]) - 1;\n        this.paginationAddress = this.paginationNext.split('page=')[0];\n      } else {\n        this.currentPage = this.numberOfPages;\n      }\n\n\n\n      this.pagesShown = []; // We reset the list on every API call\n      // this.initializer = Math.max(1, this.currentPage - 2) <= 0 ? 1 :\n      //   this.currentPage - 2;\n      // this.endCondition = Math.min(this.currentPage + 2, this.numberOfPages)\n\n\n      // Selection of the page numbers to be displayed on the pagination nav\n\n      this.pagesShown = []; // We reset the list on every API call\n\n      // Set initializer and end condition for pages loop\n\n      if (this.numberOfPages <= 5 || [1, 2].includes(this.currentPage)) {\n        this.initializer = 1;\n        this.endCondition = Math.min(this.numberOfPages, 5);\n      } else if ([this.numberOfPages, this.numberOfPages - 1].includes(\n        this.currentPage)) {\n        this.initializer = this.currentPage - 4;\n        this.endCondition = this.numberOfPages;\n      } else {\n        this.initializer = this.currentPage - 2;\n        this.endCondition = this.currentPage + 2;\n      }\n\n      // Set pages to be shown with corresponding API address\n\n      for (let i = this.initializer; i <= this.endCondition; i++) {\n        this.pagesShown.push({\n          \"number\": i,\n          \"address\": `${this.paginationAddress}page=${i}`\n        })\n      }\n\n\n\n      // if (this.numberOfPages <= 5 || [1, 2].includes(this.currentPage)) {\n      //   for (let i = 1; i < (this.numberOfPages + 1); i++) {\n      //     this.pagesShown.push({\n      //       \"number\": i,\n      //       \"address\": `http://localhost:8000/stores/?format=json&page=${i}`\n      //     })\n\n      //     if (this.pagesShown.length == 5) {\n      //       break\n      //     }\n      //   }\n      // } else if ([this.numberOfPages, this.numberOfPages - 1].includes(\n      //   this.currentPage)) {\n      //   for (let i = (this.currentPage - 4);\n      //     i < this.numberOfPages + 1; i++) {\n      //     this.pagesShown.push({\n      //       \"number\": i,\n      //       \"address\": `http://localhost:8000/stores/?format=json&page=${i}`\n      //     })\n      //   }\n      // } else {\n      //   for (let i = this.currentPage - 2; i < this.currentPage + 3; i++) {\n      //     this.pagesShown.push({\n      //       \"number\": i,\n      //       \"address\": `http://localhost:8000/stores/?format=json&page=${i}`\n      //     })\n      //   }\n      // }\n    });\n  }\n\n\n  constructor(private _loading: LoadingService,\n    private storesService: StoresService) { }\n\n  ngOnInit() {\n    this.getStores();\n    this.listenToLoading();\n  }\n\n  listenToLoading(): void {\n    this._loading.loadingSub\n      .pipe(delay(0)) // This prevents a ExpressionChangedAfterItHasBeenCheckedError for subsequent requests\n      .subscribe((loading) => {\n        this.loading = loading;\n      });\n  }\n\n}\n","<div style=\"text-align:left\">\n\t\t<!--explore start -->\n\t\t<section id=\"explore\" class=\"explore\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"section-header\">\n\t\t\t\t\t<h2>find your store</h2>\n\t\t\t\t\t<p>Find stores and businesses that accept ADA coin, the Cardano Blockchain coin</p>\n\t\t\t\t\t<div *ngIf=\"loading\">\n    \t\t\t\t\t<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!--/.section-header-->\n\t\t\t\t<div class=\"explore-content\">\n\t\t\t\t\t<div class=\"row\">\n\n\t\t\t\t\t\t<app-store-box *ngFor=\"let item of storeList; let indexOfStore=index\" [store]=\"item\" \n\t\t\t\t\t\t[index]=\"indexOfStore\"></app-store-box>\t\n\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav aria-label=\"pagination\">\n\t\t\t\t\t\t<ul class=\"pagination\">\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == 1\" (click)=\"getStores(paginationPrevious)\"><span>«</span></button></li>\n\t\t\t\t\t\t\t<li *ngFor=\"let page of pagesShown\"><button class=\"pagination-btn\" [disabled]=\"currentPage == page['number']\" (click)=\"getStores(page['address'])\">{{page['number']}}</button></li>\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == numberOfPages\" (click)=\"getStores(paginationNext)\"><span class=\"visuallyhidden\"></span><span aria-hidden=\"true\">»</span></button></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t</div>\n\t\t\t</div><!--/.container-->\n\n\t\t</section><!--/.explore-->\n\t\t<!--explore end -->\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}